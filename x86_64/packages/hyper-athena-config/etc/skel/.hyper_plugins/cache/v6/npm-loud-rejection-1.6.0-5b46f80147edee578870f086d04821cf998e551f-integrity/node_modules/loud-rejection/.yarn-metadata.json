{
  "manifest": {
    "name": "loud-rejection",
    "version": "1.6.0",
    "description": "Make unhandled promise rejections fail loudly instead of the default silent fail",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/loud-rejection.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "xo && nyc ava",
      "coveralls": "nyc report --reporter=text-lcov | coveralls"
    },
    "files": [
      "index.js",
      "register.js",
      "api.js"
    ],
    "keywords": [
      "promise",
      "promises",
      "unhandled",
      "uncaught",
      "rejection",
      "loud",
      "fail",
      "catch",
      "throw",
      "handler",
      "exit",
      "debug",
      "debugging",
      "verbose"
    ],
    "dependencies": {
      "currently-unhandled": "^0.4.1",
      "signal-exit": "^3.0.0"
    },
    "devDependencies": {
      "ava": "*",
      "bluebird": "^3.0.5",
      "coveralls": "^2.11.4",
      "delay": "^1.0.0",
      "execa": "^0.4.0",
      "get-stream": "^2.0.0",
      "nyc": "^6.2.1",
      "xo": "*"
    },
    "nyc": {
      "exclude": [
        "fixture.js"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/athena/.hyper_plugins/cache/v6/npm-loud-rejection-1.6.0-5b46f80147edee578870f086d04821cf998e551f-integrity/node_modules/loud-rejection/package.json",
    "readmeFilename": "readme.md",
    "readme": "# loud-rejection [![Build Status](https://travis-ci.org/sindresorhus/loud-rejection.svg?branch=master)](https://travis-ci.org/sindresorhus/loud-rejection) [![Coverage Status](https://coveralls.io/repos/github/sindresorhus/loud-rejection/badge.svg?branch=master)](https://coveralls.io/github/sindresorhus/loud-rejection?branch=master)\n\n> Make unhandled promise rejections fail loudly instead of the default [silent fail](https://gist.github.com/benjamingr/0237932cee84712951a2)\n\nBy default, promises fail silently if you don't attach a `.catch()` handler to them.\n\nUse this in top-level things like tests, CLI tools, apps, etc, **but not in reusable modules.**<br>\nNot needed in the browser as unhandled promises are shown in the console.\n\n\n## Install\n\n```\n$ npm install --save loud-rejection\n```\n\n\n## Usage\n\n```js\nconst loudRejection = require('loud-rejection');\nconst promiseFn = require('promise-fn');\n\n// Install the unhandledRejection listeners\nloudRejection();\n\npromiseFn();\n```\n\nWithout this module it's more verbose and you might even miss some that will fail silently:\n\n```js\nconst promiseFn = require('promise-fn');\n\nfunction error(err) {\n\tconsole.error(err.stack);\n\tprocess.exit(1);\n}\n\npromiseFn().catch(error);\n```\n\n### Register script\n\nAlternatively to the above, you may simply require `loud-rejection/register` and the unhandledRejection listener will be automagically installed for you.\n\nThis is handy for ES2015 imports:\n\n```js\nimport 'loud-rejection/register';\n```\n\n\n## API\n\n### loudRejection([log])\n\n#### log\n\nType: `Function`<br>\nDefault: `console.error`\n\nCustom logging function to print the rejected promise. Receives the error stack.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/loud-rejection/-/loud-rejection-1.6.0.tgz#5b46f80147edee578870f086d04821cf998e551f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/loud-rejection/-/loud-rejection-1.6.0.tgz",
    "hash": "5b46f80147edee578870f086d04821cf998e551f",
    "integrity": "sha512-RPNliZOFkqFumDhvYqOaNY4Uz9oJM2K9tC6JWsJJsNdhuONW4LQHRBpb0qf4pJApVffI5N39SwzWZJuEhfd7eQ==",
    "registry": "npm",
    "packageName": "loud-rejection",
    "cacheIntegrity": "sha512-RPNliZOFkqFumDhvYqOaNY4Uz9oJM2K9tC6JWsJJsNdhuONW4LQHRBpb0qf4pJApVffI5N39SwzWZJuEhfd7eQ== sha1-W0b4AUft7leIcPCG0Eghz5mOVR8="
  },
  "registry": "npm",
  "hash": "5b46f80147edee578870f086d04821cf998e551f"
}