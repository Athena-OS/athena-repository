{
  "manifest": {
    "name": "normalize-path",
    "description": "Normalize file path slashes to be unix-like forward slashes. Also condenses repeat slashes to a single slash and removes and trailing slashes unless disabled.",
    "version": "2.1.1",
    "homepage": "https://github.com/jonschlinkert/normalize-path",
    "author": {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    },
    "contributors": [
      {
        "name": "Blaine Bublitz",
        "email": "blaine.bublitz@gmail.com",
        "url": "https://twitter.com/BlaineBublitz"
      },
      {
        "name": "Jon Schlinkert",
        "email": "jon.schlinkert@sellside.com",
        "url": "http://twitter.com/jonschlinkert"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/jonschlinkert/normalize-path.git"
    },
    "bugs": {
      "url": "https://github.com/jonschlinkert/normalize-path/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "mocha"
    },
    "dependencies": {
      "remove-trailing-separator": "^1.0.1"
    },
    "devDependencies": {
      "benchmarked": "^0.1.1",
      "gulp-format-md": "^0.1.11",
      "minimist": "^1.2.0",
      "mocha": "*"
    },
    "keywords": [
      "backslash",
      "file",
      "filepath",
      "fix",
      "forward",
      "fp",
      "fs",
      "normalize",
      "path",
      "slash",
      "slashes",
      "trailing",
      "unix",
      "urix"
    ],
    "verb": {
      "related": {
        "list": [
          "contains-path",
          "ends-with",
          "is-absolute",
          "is-relative",
          "parse-filepath",
          "path-ends-with",
          "path-segments",
          "rewrite-ext",
          "unixify"
        ],
        "description": "Other useful libraries for working with paths in node.js:"
      },
      "toc": false,
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "lint": {
        "reflinks": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/athena/.hyper_plugins/cache/v6/npm-normalize-path-2.1.1-1ab28b556e198363a8c1a6f7e6fa20137fe6aed9-integrity/node_modules/normalize-path/package.json",
    "readmeFilename": "README.md",
    "readme": "# normalize-path [![NPM version](https://img.shields.io/npm/v/normalize-path.svg?style=flat)](https://www.npmjs.com/package/normalize-path) [![NPM monthly downloads](https://img.shields.io/npm/dm/normalize-path.svg?style=flat)](https://npmjs.org/package/normalize-path)  [![NPM total downloads](https://img.shields.io/npm/dt/normalize-path.svg?style=flat)](https://npmjs.org/package/normalize-path) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/normalize-path.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/normalize-path)\n\n> Normalize file path slashes to be unix-like forward slashes. Also condenses repeat slashes to a single slash and removes and trailing slashes unless disabled.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save normalize-path\n```\n\n## Usage\n\n```js\nvar normalize = require('normalize-path');\n\nnormalize('\\\\foo\\\\bar\\\\baz\\\\');\n//=> '/foo/bar/baz'\n\nnormalize('./foo/bar/baz/');\n//=> './foo/bar/baz'\n```\n\nPass `false` as the last argument to **keep** trailing slashes:\n\n```js\nnormalize('./foo/bar/baz/', false);\n//=> './foo/bar/baz/'\n\nnormalize('foo\\\\bar\\\\baz\\\\', false);\n//=> 'foo/bar/baz/'\n```\n\n## About\n\n### Related projects\n\n* [contains-path](https://www.npmjs.com/package/contains-path): Return true if a file path contains the given path. | [homepage](https://github.com/jonschlinkert/contains-path \"Return true if a file path contains the given path.\")\n* [ends-with](https://www.npmjs.com/package/ends-with): Returns `true` if the given `string` or `array` ends with `suffix` using strict equality for… [more](https://github.com/jonschlinkert/ends-with) | [homepage](https://github.com/jonschlinkert/ends-with \"Returns `true` if the given `string` or `array` ends with `suffix` using strict equality for comparisons.\")\n* [is-absolute](https://www.npmjs.com/package/is-absolute): Polyfill for node.js `path.isAbolute`. Returns true if a file path is absolute. | [homepage](https://github.com/jonschlinkert/is-absolute \"Polyfill for node.js `path.isAbolute`. Returns true if a file path is absolute.\")\n* [is-relative](https://www.npmjs.com/package/is-relative): Returns `true` if the path appears to be relative. | [homepage](https://github.com/jonschlinkert/is-relative \"Returns `true` if the path appears to be relative.\")\n* [parse-filepath](https://www.npmjs.com/package/parse-filepath): Pollyfill for node.js `path.parse`, parses a filepath into an object. | [homepage](https://github.com/jonschlinkert/parse-filepath \"Pollyfill for node.js `path.parse`, parses a filepath into an object.\")\n* [path-ends-with](https://www.npmjs.com/package/path-ends-with): Return `true` if a file path ends with the given string/suffix. | [homepage](https://github.com/jonschlinkert/path-ends-with \"Return `true` if a file path ends with the given string/suffix.\")\n* [path-segments](https://www.npmjs.com/package/path-segments): Get n specific segments of a file path, e.g. first 2, last 3, etc. | [homepage](https://github.com/jonschlinkert/path-segments \"Get n specific segments of a file path, e.g. first 2, last 3, etc.\")\n* [rewrite-ext](https://www.npmjs.com/package/rewrite-ext): Automatically re-write the destination extension of a filepath based on the source extension. e.g… [more](https://github.com/jonschlinkert/rewrite-ext) | [homepage](https://github.com/jonschlinkert/rewrite-ext \"Automatically re-write the destination extension of a filepath based on the source extension. e.g  `.coffee` => `.js`. This will only rename the ext, no other path parts are modified.\")\n* [unixify](https://www.npmjs.com/package/unixify): Convert Windows file paths to unix paths. | [homepage](https://github.com/jonschlinkert/unixify \"Convert Windows file paths to unix paths.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 31 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 1 | [phated](https://github.com/phated) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.4.3, on March 29, 2017._",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014-2017, Jon Schlinkert\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/normalize-path/-/normalize-path-2.1.1.tgz#1ab28b556e198363a8c1a6f7e6fa20137fe6aed9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/normalize-path/-/normalize-path-2.1.1.tgz",
    "hash": "1ab28b556e198363a8c1a6f7e6fa20137fe6aed9",
    "integrity": "sha512-3pKJwH184Xo/lnH6oyP1q2pMd7HcypqqmRs91/6/i2CGtWwIKGCkOOMTm/zXbgTEWHw1uNpNi/igc3ePOYHb6w==",
    "registry": "npm",
    "packageName": "normalize-path",
    "cacheIntegrity": "sha512-3pKJwH184Xo/lnH6oyP1q2pMd7HcypqqmRs91/6/i2CGtWwIKGCkOOMTm/zXbgTEWHw1uNpNi/igc3ePOYHb6w== sha1-GrKLVW4Zg2Oowab35vogE3/mrtk="
  },
  "registry": "npm",
  "hash": "1ab28b556e198363a8c1a6f7e6fa20137fe6aed9"
}