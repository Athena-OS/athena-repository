{
  "manifest": {
    "name": "currently-unhandled",
    "version": "0.4.1",
    "description": "Track the list of currently unhandled promise rejections.",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/jamestalmage/currently-unhandled.git"
    },
    "author": {
      "name": "James Talmage",
      "email": "james@talmage.io",
      "url": "github.com/jamestalmage"
    },
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "xo && nyc ava"
    },
    "files": [
      "index.js",
      "core.js",
      "browser.js"
    ],
    "keywords": [
      "unhandled",
      "unhandledRejection",
      "rejected",
      "promises"
    ],
    "dependencies": {
      "array-find-index": "^1.0.1"
    },
    "devDependencies": {
      "ava": "^0.15.1",
      "bluebird": "^3.4.0",
      "browserify": "^13.0.1",
      "coveralls": "^2.11.9",
      "delay": "^1.3.1",
      "is-ci": "^1.0.8",
      "karma": "^0.13.22",
      "karma-browserify": "^5.0.5",
      "karma-chrome-launcher": "^1.0.1",
      "karma-firefox-launcher": "^1.0.0",
      "karma-mocha": "^1.0.1",
      "mocha": "^2.5.3",
      "nyc": "^6.4.0",
      "watchify": "^3.7.0",
      "xo": "^0.15.0"
    },
    "browser": {
      "./index.js": "./browser.js"
    },
    "ava": {
      "files": "test.js"
    },
    "nyc": {
      "reporter": [
        "lcov",
        "text"
      ]
    },
    "xo": {
      "ignores": [
        "browser-bluebird-test.js"
      ],
      "envs": [
        "browser",
        "mocha",
        "node"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/athena/.hyper_plugins/cache/v6/npm-currently-unhandled-0.4.1-988df33feab191ef799a61369dd76c17adf957ea-integrity/node_modules/currently-unhandled/package.json",
    "readmeFilename": "readme.md",
    "readme": "# currently-unhandled [![Build Status](https://travis-ci.org/jamestalmage/currently-unhandled.svg?branch=master)](https://travis-ci.org/jamestalmage/currently-unhandled) [![Coverage Status](https://coveralls.io/repos/github/jamestalmage/currently-unhandled/badge.svg?branch=master)](https://coveralls.io/github/jamestalmage/currently-unhandled?branch=master)\n\n> Track the list of currently unhandled promise rejections.\n\n\n## Install\n\n```\n$ npm install --save currently-unhandled\n```\n\n\n## Usage\n\n```js\nconst currentlyUnhandled = require('currently-unhandled')(); // <- note the invocation\n\nvar fooError = new Error('foo');\nvar p = Promise.reject(new Error('foo'));\n\n// on the next tick - unhandled rejected promise is added to the list:\ncurrentlyUnhandled();\n//=> [{promise: p, reason: fooError}]'\n\np.catch(() => {});\n\n// on the next tick - handled promise is now removed from the list:\ncurrentlyUnhandled();\n//=> [];\n```\n\n## API\n\n### currentlyUnhandled()\n\nReturns an array of objects with `promise` and `reason` properties representing the rejected promises that currently do not have a rejection handler. The list grows and shrinks as unhandledRejections are published, and later handled.\n\n## Browser Support\n\nThis module can be bundled with `browserify`. At time of writing, it will work with native Promises in the Chrome browser only. For best cross-browser support, use `bluebird` instead of native Promise support in browsers.\n\n## License\n\nMIT Â© [James Talmage](http://github.com/jamestalmage)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) James Talmage <james@talmage.io> (github.com/jamestalmage)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/currently-unhandled/-/currently-unhandled-0.4.1.tgz#988df33feab191ef799a61369dd76c17adf957ea",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
    "hash": "988df33feab191ef799a61369dd76c17adf957ea",
    "integrity": "sha512-/fITjgjGU50vjQ4FH6eUoYu+iUoUKIXws2hL15JJpIR+BbTxaXQsMuuyjtNh2WqsSBS5nsaZHFsFecyw5CCAng==",
    "registry": "npm",
    "packageName": "currently-unhandled",
    "cacheIntegrity": "sha512-/fITjgjGU50vjQ4FH6eUoYu+iUoUKIXws2hL15JJpIR+BbTxaXQsMuuyjtNh2WqsSBS5nsaZHFsFecyw5CCAng== sha1-mI3zP+qxke95mmE2nddsF635V+o="
  },
  "registry": "npm",
  "hash": "988df33feab191ef799a61369dd76c17adf957ea"
}