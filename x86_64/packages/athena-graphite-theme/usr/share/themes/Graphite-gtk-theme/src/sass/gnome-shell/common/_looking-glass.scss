/* Looking Glass */

// Dialog
#LookingGlassDialog {
  background-color: $base !important;
  spacing: 4px;
  padding: 0;
  border-radius: $base_radius;
  box-shadow: 0 3px 8px 0 rgba(black, 0.25);
  color: $text !important;

  @if $rimless == 'false' {
    border: 2px solid $primary;
    border-top: none;
  } @else { border: none; }

  & > #Toolbar {
    padding: 0 $base_padding;
    border: none;
    border-radius: 0;
    background-color: $background !important;
    box-shadow: inset 0 -1px 0 $border;
    spacing: $base_padding;

    .lg-toolbar-button {
      padding: $base_padding $base_padding * 2;
      @extend %flat_button;

      & > StIcon { icon-size: 16px; }
    }
  }

  .labels { spacing: $base_padding; }

  .notebook-tab {
    -natural-hpadding: $base_padding * 2;
    -minimum-hpadding: $base_padding * 2;
    font-weight: bold;
    color: $text-disabled;
    padding: $base_padding $base_padding * 2;
    transition-duration: 100ms;
    border-bottom-width: 0;
    border-radius: 0;

    &:hover {
      background-color: $fill;
      color: $text;
      text-shadow: none;
    }

    &:selected {
      border-color: transparent;
      background-color: $divider;
      box-shadow: inset 0 -2px 0 $indicator;
      color: $text;
      text-shadow: none;
    }
  }

  StBoxLayout#EvalBox { padding: 4px; spacing: $base_padding; padding: $base_padding; }
  StBoxLayout#ResultsArea { spacing: $base_padding; padding: $base_padding; }
}

.lg-dialog {
  StEntry {
    min-height: 22px;
    selection-background-color: $primary;
    selected-color: on($primary);
  }
  .shell-link {
    color: $link;
    &:hover { color: lighten($link, 10%); }
    &:active { color: darken($link, 10%); }
   }
  .actor-link {
    color: $text-secondary;
    &:hover { color: $text; }
    &:active { color: $text-secondary; }
   }
}

.lg-completions-text {
  font-size: .9em;
  font-style: italic;
}

.lg-obj-inspector-title {
  spacing: $base_spacing;
}

.lg-obj-inspector-button {
  padding: 0 16px;
  border: none;
  border-radius: $base_radius;
  @extend %flat_button;

  &:hover { border: none; }
}

// Extensions
#lookingGlassExtensions { padding: $base_padding; }

.lg-extensions-list {
  padding: $base_padding;
  spacing: $base_padding;
}

.lg-extension {
  border-radius: $base_radius;
  background-color: $fill !important;
  color: $text !important;
  padding: $base_padding * 2;
  box-shadow: none;

  @if $rimless == 'false' {
    border: 2px solid $primary;
  } @else { border: none; }
}

.lg-extension-name {
  font-weight: bold;
}

.lg-extension-meta {
  spacing: $base_spacing;
}

// Inspector
#LookingGlassPropertyInspector {
  color: $text-secondary !important;
  background: $base !important;
  border: none;
  border-radius: $base_radius;
  padding: $base_padding;
  margin: 5px 8px 11px;
  box-shadow: 0 3px 8px 0 rgba(black, 0.25);
}

.lg-debug-flag-button {
  StLabel { padding: $base_padding 2 * $base_padding; }

  color: $text_secondary;
  &:hover { color: $text; }
  &:active { color: $text-secondary; }
}

.lg-debug-flags-header {
  padding-top: 2 * $base_padding;
  padding: $base_padding;
  margin: $base_padding;
  color: $text-secondary-disabled;
}
